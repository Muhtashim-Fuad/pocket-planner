import 'package:pocket_planner/core/transaction_data.dart';

class Data {
  static final List<TransactionData> transactionList = [
    TransactionData(
      name: 'Salary',
      description: 'Monthly salary',
      transactionType: TransactionType.income,
      amount: 3500.0,
      time: DateTime.now().subtract(Duration(days: 3)),
    ),
    TransactionData(
      name: 'Grocery Shopping',
      description: 'Weekly groceries',
      transactionType: TransactionType.expense,
      amount: 150.0,
      time: DateTime.now().subtract(Duration(days: 3)),
    ),
    TransactionData(
      name: 'Electricity Bill',
      description: 'Monthly electricity bill',
      transactionType: TransactionType.expense,
      amount: 75.0,
      time: DateTime.now().subtract(Duration(days: 7)),
    ),
    TransactionData(
      name: 'Freelance Work',
      description: 'Freelance project payment',
      transactionType: TransactionType.income,
      amount: 800.0,
      time: DateTime.now().subtract(Duration(days: 5)),
    ),
    TransactionData(
      name: 'Dinner Out',
      description: 'Dinner at a restaurant',
      transactionType: TransactionType.expense,
      amount: 60.0,
      time: DateTime.now().subtract(Duration(days: 13)),
    ),
    TransactionData(
      name: 'Car Maintenance',
      description: 'Car service and maintenance',
      transactionType: TransactionType.expense,
      amount: 300.0,
      time: DateTime.now().subtract(Duration(days: 9)),
    ),
    TransactionData(
      name: 'Dividends',
      description: 'Stock dividends',
      transactionType: TransactionType.income,
      amount: 200.0,
      time: DateTime.now().subtract(Duration(days: 5)),
    ),
    TransactionData(
      name: 'Movie Night',
      description: 'Movie tickets',
      transactionType: TransactionType.expense,
      amount: 45.0,
      time: DateTime.now().subtract(Duration(days: 14)),
    ),
    TransactionData(
      name: 'Freelance Work',
      description: 'Freelance project payment',
      transactionType: TransactionType.income,
      amount: 700.0,
      time: DateTime.now().subtract(Duration(days: 6)),
    ),
    TransactionData(
      name: 'Gym Membership',
      description: 'Monthly gym fee',
      transactionType: TransactionType.expense,
      amount: 50.0,
      time: DateTime.now().subtract(Duration(days: 2)),
    ),
    TransactionData(
      name: 'Book Sale',
      description: 'Sold old books',
      transactionType: TransactionType.income,
      amount: 120.0,
      time: DateTime.now(),
    ),
    TransactionData(
      name: 'Coffee',
      description: 'Morning coffee',
      transactionType: TransactionType.expense,
      amount: 5.0,
      time: DateTime.now().subtract(Duration(days: 4)),
    ),
    TransactionData(
      name: 'Tutoring',
      description: 'Tutoring session payment',
      transactionType: TransactionType.income,
      amount: 100.0,
      time: DateTime.now().subtract(Duration(days: 15)),
    ),
    TransactionData(
      name: 'Gas',
      description: 'Gas for car',
      transactionType: TransactionType.expense,
      amount: 40.0,
      time: DateTime.now().subtract(Duration(days: 7)),
    ),
    TransactionData(
      name: 'Gift',
      description: 'Birthday gift',
      transactionType: TransactionType.expense,
      amount: 100.0,
      time: DateTime.now().subtract(Duration(days: 11)),
    ),
    TransactionData(
      name: 'Bonus',
      description: 'Year-end bonus',
      transactionType: TransactionType.income,
      amount: 1500.0,
      time: DateTime.now().subtract(Duration(days: 2)),
    ),
    TransactionData(
      name: 'Streaming Service',
      description: 'Monthly subscription',
      transactionType: TransactionType.expense,
      amount: 15.0,
      time: DateTime.now().subtract(Duration(days: 6)),
    ),
    TransactionData(
      name: 'Consulting',
      description: 'Consulting fee',
      transactionType: TransactionType.income,
      amount: 400.0,
      time: DateTime.now().subtract(Duration(days: 9)),
    ),
    TransactionData(
      name: 'Lunch',
      description: 'Lunch with colleagues',
      transactionType: TransactionType.expense,
      amount: 25.0,
      time: DateTime.now().subtract(Duration(days: 5)),
    ),
    TransactionData(
      name: 'Refund',
      description: 'Product refund',
      transactionType: TransactionType.income,
      amount: 60.0,
      time: DateTime.now().subtract(Duration(days: 12)),
    ),
    TransactionData(
      name: 'Groceries',
      description: 'Weekly groceries',
      transactionType: TransactionType.expense,
      amount: 130.0,
      time: DateTime.now().subtract(Duration(days: 4)),
    ),
    TransactionData(
      name: 'Stock Sale',
      description: 'Sold stocks',
      transactionType: TransactionType.income,
      amount: 1000.0,
      time: DateTime.now().subtract(Duration(days: 10)),
    ),
    TransactionData(
      name: 'Pet Supplies',
      description: 'Supplies for pet',
      transactionType: TransactionType.expense,
      amount: 70.0,
      time: DateTime.now().subtract(Duration(days: 8)),
    ),
    TransactionData(
      name: 'Freelance Work',
      description: 'Freelance project payment',
      transactionType: TransactionType.income,
      amount: 900.0,
      time: DateTime.now().subtract(Duration(days: 15)),
    ),
    TransactionData(
      name: 'Electricity Bill',
      description: 'Monthly electricity bill',
      transactionType: TransactionType.expense,
      amount: 80.0,
      time: DateTime.now().subtract(Duration(days: 10)),
    ),
    TransactionData(
      name: 'Gift',
      description: 'Birthday gift',
      transactionType: TransactionType.expense,
      amount: 150.0,
      time: DateTime.now().subtract(Duration(days: 7)),
    ),
    TransactionData(
      name: 'Salary',
      description: 'Monthly salary',
      transactionType: TransactionType.income,
      amount: 5000.0,
      time: DateTime.now().subtract(Duration(days: 14)),
    ),
    TransactionData(
      name: 'Dinner Out',
      description: 'Dinner at a restaurant',
      transactionType: TransactionType.expense,
      amount: 70.0,
      time: DateTime.now().subtract(Duration(days: 11)),
    ),
    TransactionData(
      name: 'Bonus',
      description: 'Performance bonus',
      transactionType: TransactionType.income,
      amount: 2000.0,
      time: DateTime.now().subtract(Duration(days: 13)),
    ),
    TransactionData(
      name: 'New Phone',
      description: 'Bought a new phone',
      transactionType: TransactionType.expense,
      amount: 800.0,
      time: DateTime.now().subtract(Duration(days: 12)),
    ),
    TransactionData(
      name: 'Consulting',
      description: 'Consulting fee',
      transactionType: TransactionType.income,
      amount: 500.0,
      time: DateTime.now(),
    ),
    TransactionData(
      name: 'Groceries',
      description: 'Weekly groceries',
      transactionType: TransactionType.expense,
      amount: 120.0,
      time: DateTime.now().subtract(Duration(days: 3)),
    ),
    TransactionData(
      name: 'Stock Sale',
      description: 'Sold stocks',
      transactionType: TransactionType.income,
      amount: 1100.0,
      time: DateTime.now().subtract(Duration(days: 2)),
    ),
    TransactionData(
      name: 'Gas',
      description: 'Gas for car',
      transactionType: TransactionType.expense,
      amount: 50.0,
      time: DateTime.now(),
    ),
  ];
}
